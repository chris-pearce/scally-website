/* ============================================================================
   @COMPONENTS -> HERO
   ========================================================================= */


/**
 * Hero banner that is featured on the home page.
 */


.c-hero {
  @extend %font-family-sans-serif;
  @include to-rem(padding-top padding-bottom, $spacing-double);
  background-image: $color-gradient-tropical;
  background: black;
  text-align: center;
  // These rules are needs for the animating gradient
  overflow: hidden;
  position: relative;
  z-index: 1;

  @include respond-to(lap) {
    @include to-rem(padding-top padding-bottom, $spacing-quadruple);
  }

  /**
   * Base + link colours.
   */

  &,
  a {
    color: $color-white;
  }

  a:hover,
  a:focus {
    text-decoration: none;
  }
}


/**
 * Inner container.
 *
 * N.B. these rules are needed for the animating gradient.
 */

.c-hero__inner {
  position: relative;
  z-index: 3;
}


/**
 * Logo.
 */

.c-hero__logo {
  max-width: 80%;

  @include respond-to(lap) {
    max-width: 100%;
  }
}


/**
 * The slogan.
 */

.c-hero__slogan {
  @include to-rem(margin-top, $spacing-double);
}


/**
 * Install.
 */

.c-hero__install {
  @include to-rem(margin-bottom, $spacing-base);

  > li {
    @include to-rem(margin-bottom, $spacing-third);

    &:last-child {
      margin-bottom: 0;
    }

    @include respond-to(401) {
      @include to-rem(margin-right, $spacing-third);
    }

    @include respond-to(lap) {
      margin-bottom: 0;
    }
  }
}

/**
 * Install items.
 */

// `kbd`
.c-hero__install__item {
  @include to-rem(padding, 6 12);
  background-color: $color-black;
  border-radius: 6px;
  display: inline-block;
  width: 100%;
  vertical-align: middle;
}

// `a`
.c-hero__cmds__item--link {
  text-decoration: none;

  // Nudge down the Unicode arrow to align with the link text
  span {
    position: relative;
    top: 1px;
  }
}


/**
 * Main actions.
 */

.c-hero__actions-mainX {
  @include to-rem(margin-bottom, $spacing-base);

  > li {
    @include to-rem(margin-bottom, $spacing-third);

    &:last-child {
      margin-bottom: 0;
    }

    @include respond-to(401) {
      @include to-rem(padding-right, $spacing-third);
      margin-bottom: 0;
    }
  }


  /**
   * Main action buttons are full bleed up until the viewport hits 400px wide
   * at which point they become as wide as the button text and horizontally
   * aligned.
   *
   * Extend `.c-button` from Scally -> Components -> Button.
   */

  .c-button {
    @include font-size($font-size-large, normal);

    @include respond-to(401) {
      display: inline-block;
      width: auto;
    }
  }
}


/**
 * Version number, CHANGELOG and GitHub links.
 */

.c-hero__version {
  @include font-size($font-size-small);

  a {
    @include to-rem(margin-right, $spacing-half);
    display: inline-block;
  }
}


/**
 * Animating the gradient horizontally. We have 2 elements both being 100% of
 * the viewport and having the gradient as a background image. The 2nd half of
 * the gradient joins to the 1st half from behind with parts scrolling
 * horizontally for an infinite number of times.
 */

.c-hero__gradient {
  @extend %u-position-pin-all;
  background-image: $color-gradient-tropical;
  animation-duration: 60s;
  animation-timing-function: linear;
  //animation-delay: 6s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  z-index: 2;
  // This is needed to join the 2 gradients seamlessly in Chrome
  width: 100%;
  height: 100%;
}

/**
 * Modifier: 1st half.
 */

.c-hero__gradient--lead {
  animation-name: hero-scroll-lead;
}

/**
 * Modifier: 2nd half.
 */

.c-hero__gradient--follow {
  background-image: $color-gradient-tropical-alt;
  animation-name: hero-scroll-follow;
  margin-left: -1px;
}

/**
 * The animations.
 */

@keyframes hero-scroll-lead {
  from {transform: translateX(0);}
  to {transform: translateX(-100%);}
}

@keyframes hero-scroll-follow {
  from {transform: translateX(100%);}
  to {transform: translateX(0);}
}