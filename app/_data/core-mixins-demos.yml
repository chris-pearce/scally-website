- id: demos-mixins-convert-px-to-em-rem
  heading: Convert Pixels To <code class="c-inline-code">em</code> Or <code class="c-inline-code">rem</code> Units
  intro: 'A mixin—just like the <a href="#demos-functions-convert-px-to-em-rem">function</a>—that converts pixels to either <code class="c-inline-code">em</code> or <code class="c-inline-code">rem</code> units, without the function this mixin won’t work. The difference between them is that the mixin will work for multiple properties or values or both. It accepts a list of lists (instead a list of values) for properties that accept multiple lists of values. The conversion to <code class="c-inline-code">em</code> mixin accepts an optional 3rd argument  which is the font size of the parent element, if empty it defaults to the root font size set on the <code class="c-inline-code">&#12296;html&#12297;</code> element. Both these mixins allow you to specify the <code class="c-inline-code">!important</code> keyword and you can include the pixel unit if you wish as the mixin will strip it out.'
  source-code-url: 'https://github.com/chris-pearce/scally/blob/master/core/mixins/_convert-px-to-em-rem.scss'
  scss: !xml |
        .selector {
           @include to-em(width height, 125px);
         }

         .selector {
           @include to-rem(padding, 0 25);
         }

         .selector {
           @include to-em(text-shadow, (#0d6e28 1 1) (#777 0 0 2), 16);
         }

         .selector {
           @include to-rem(box-shadow, (inset 0 0 0 1 #2a9022) (inset 0 0 3 #459966));
         }

         .selector {
           @include to-em(padding margin, $spacing-base, false, true);
         }

         .selector {
           @include to-rem(padding margin, $spacing-base, true);
         }
